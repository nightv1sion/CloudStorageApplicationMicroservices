version: "3.9"
services:
  authentication-microservice-api:
    container_name: authentication-microservice-api
    build:
      context: ../Backend
      dockerfile: ../Backend/Microservices/Authentication/src/Authentication.Presentation/Dockerfile
    ports:
      - "5001:80"
    networks:
      - authentication-microservice-network
      - ocelot-gateway-network
    environment:
      ConnectionStrings__PostgresDatabase: Host=host.docker.internal;Port=5432;Database=Authentication;Username=postgres;Password=postgres;Include Error Details=true;
      JWT__Secret: ${JWT_SECRET}
    volumes:
      - logs:/logs

  authentication-microservice-database:
    image: postgres:16
    container_name: authentication-microservice-database
    ports: 
      - "5432:5432"
      - "15432:15432"
    networks: 
      - authentication-microservice-network
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
  
  files-microservice-api:
    container_name: files-microservice-api
    build:
      context: ../Backend
      dockerfile: ../Backend/Microservices/Files/src/Files.Presentation/Dockerfile
    ports:
      - "5002:80"
    networks:
      - files-microservice-network
      - ocelot-gateway-network
      - rabbit-mq-network
    environment:
      ConnectionStrings__PostgresDatabase: Host=host.docker.internal;Port=5433;Database=Files;Username=postgres;Password=postgres;Include Error Details=true;
      JWT__Secret: "${JWT_SECRET}"
      RabbitMQ__Host: host.docker.internal
      RabbitMQ__Username: guest
      RabbitMQ__Password: guest
      RabbitMQ__VirtualHost: /
    volumes:
      - logs:/logs
        
  files-microservice-database:
    image: postgres:16
    container_name: files-microservice-database
    ports:
      - "5433:5432"
      - "15433:15432"
    networks:
      - files-microservice-network
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
  
  storage-microservice-api:
    container_name: storage-microservice-api
    build:
      context: ../Backend
      dockerfile: ../Backend/Microservices/Storage/Storage.API/Dockerfile
    ports:
      - "5003:80"
    environment:
      Storage__Path: storage/files
      RabbitMQ__Host: host.docker.internal
      RabbitMQ__Username: guest
      RabbitMQ__Password: guest
      RabbitMQ__VirtualHost: /
    volumes:
      - storage-microservice-volume:/app/storage/files
      - logs:/logs
    networks:
      - rabbit-mq-network
  
  ocelot-api-gateway:
    container_name: ocelot-api-gateway
    build:
      context: ../Backend
      dockerfile: ../Backend/ApiGateways/OcelotApiGateway/Dockerfile
    ports:
      - "5004:80"
    environment:
      - AuthenticationMicroservice__ValidateTokenPath=http://host.docker.internal:5001/api/validate-user
    volumes:
      - logs:/logs
    networks: 
      - ocelot-gateway-network
  
  rabbitmq:
    image: masstransit/rabbitmq
    hostname: localhost
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "15672:15672"
      - "5672:5672"
    networks: 
      - rabbit-mq-network

networks:
  authentication-microservice-network:
  files-microservice-network:
  rabbit-mq-network:
  ocelot-gateway-network:

volumes: 
  logs:
  storage-microservice-volume:
  