version: "3.9"
services:
  authentication-microservice-api:
    container_name: authentication-microservice-api
    image: ${DOCKER_REGISTRY}/authentication-microservice-api:latest
    ports:
      - "5001:80"
    networks:
      - authentication-microservice-network
      - ocelot-gateway-network
    environment:
      ConnectionStrings__PostgresDatabase: ${ AUTHENTICATION_MICROSERVICE_DATABASE_CONNECTIONSTRING }
      JWT__Secret: ${ JWT_SECRET }
    volumes:
      - logs:/logs

  authentication-microservice-database:
    image: postgres:16
    container_name: authentication-microservice-database
    ports: 
      - "5432:5432"
      - "15432:15432"
    networks: 
      - authentication-microservice-network
    environment:
      POSTGRES_PASSWORD: ${ AUTHENTICATION_MICROSERVICE_DATABASE_POSTGRES_PASSWORD }
      POSTGRES_USER: ${ AUTHENTICATION_MICROSERVICE_DATABASE_POSTGRES_USER }
  
  files-microservice-api:
    container_name: files-microservice-api
    image: ${DOCKER_REGISTRY}/files-microservice-api:latest
    ports:
      - "5002:80"
    networks:
      - files-microservice-network
      - ocelot-gateway-network
      - rabbit-mq-network
    environment:
      ConnectionStrings__PostgresDatabase: ${ FILES_MICROSERVICE_DATABASE_CONNECTION_STRING }
      JWT__Secret: ${ JWT_SECRET }
      RabbitMQ__Host: ${RABBIT_MQ_HOST}
      RabbitMQ__Username: ${RABBIT_MQ_USERNAME}
      RabbitMQ__Password: ${RABBIT_MQ_PASSWORD}
      RabbitMQ__VirtualHost: ${RABBIT_MQ_VIRTUAL_HOST}
    volumes:
      - logs:/logs
        
  files-microservice-database:
    image: postgres:16
    container_name: files-microservice-database
    ports:
      - "5433:5432"
      - "15433:15432"
    networks:
      - files-microservice-network
    environment:
      POSTGRES_PASSWORD: ${ FILES_MICROSERVICE_DATABASE_POSTGRES_PASSWORD }
      POSTGRES_USER: ${ FILES_MICROSERVICE_DATABASE_POSTGRES_USER }
  
  storage-microservice-api:
    container_name: storage-microservice-api
    image: ${DOCKER_REGISTRY}/storage-microservice-api:latest
    ports:
      - "5003:80"
    environment:
      Storage__Path: ${ STORAGE_MICROSERVICE_STORAGE_PATH }
      RabbitMQ__Host: ${ RABBIT_MQ_HOSTNAME }
      RabbitMQ__Username: ${ RABBIT_MQ_USERNAME }
      RabbitMQ__Password: ${ RABBIT_MQ_PASSWORD }
      RabbitMQ__VirtualHost: ${ RABBIT_MQ_VIRTUAL_HOST }
    volumes:
      - storage-microservice-volume:/app/storage/files
      - logs:/logs
    networks:
      - rabbit-mq-network
  
  ocelot-api-gateway:
    container_name: ocelot-api-gateway
    image: ${DOCKER_REGISTRY}/ocelot-api-gateway:latest
    ports:
      - "5004:80"
    volumes:
      - logs:/logs
    networks: 
      - ocelot-gateway-network
  
  rabbitmq:
    image: masstransit/rabbitmq
    hostname: ${ RABBIT_MQ_HOSTNAME }
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_MQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_MQ_PASSWORD}
    ports:
      - "15672:15672"
      - "5672:5672"
    networks: 
      - rabbit-mq-network

networks:
  authentication-microservice-network:
  files-microservice-network:
  rabbit-mq-network:
  ocelot-gateway-network:

volumes: 
  logs:
  storage-microservice-volume:
  